name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  NODE_ENV: test
  PLAYWRIGHT_TEST: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps ${{ matrix.browser }}

      - name: Setup test environment
        run: |
          cp .env.test.local .env.local
          echo "PLAYWRIGHT_BASE_URL=http://localhost:3000" >> .env.local
          echo "CI=true" >> .env.local

      - name: Build application
        run: pnpm build

      - name: Run E2E tests - ${{ matrix.browser }}
        run: pnpm exec playwright test --project=${{ matrix.browser }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: |
            playwright-report/
            test-results/

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.browser }}
          path: test-results/screenshots/

  test-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate test summary
        run: |
          echo "## E2E Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          for browser in chromium firefox webkit; do
            if [ -d "playwright-report-$browser" ]; then
              echo "### $browser Results" >> $GITHUB_STEP_SUMMARY
              if [ -f "playwright-report-$browser/test-results/results.json" ]; then
                echo "✅ Tests completed for $browser" >> $GITHUB_STEP_SUMMARY
              else
                echo "❌ Tests failed or incomplete for $browser" >> $GITHUB_STEP_SUMMARY
              fi
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done
          
          echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Test reports available in workflow artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Screenshots (if any failures) available in artifacts" >> $GITHUB_STEP_SUMMARY

  deploy-preview:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' && success()

    steps:
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ All E2E tests passed! The changes are ready for review.'
            })

  notify-failure:
    runs-on: ubuntu-latest
    needs: test
    if: failure()

    steps:
      - name: Comment on PR about failure
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ E2E tests failed. Please check the test results in the workflow artifacts.'
            })