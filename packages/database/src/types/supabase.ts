// This file will be auto-generated by Supabase CLI
// Run: supabase gen types typescript --project-id $NEXT_PUBLIC_SUPABASE_PROJECT_ID --schema public > packages/database/src/types/supabase.ts

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      emails: {
        Row: {
          id: string
          message_id: string
          subject: string
          sender: string
          newsletter_name: string
          received_at: string
          processed_at: string
          raw_html: string | null
          clean_text: string | null
          processing_status: string
          error_message: string | null
          search_vector: unknown | null
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          message_id: string
          subject: string
          sender: string
          newsletter_name: string
          received_at: string
          processed_at?: string
          raw_html?: string | null
          clean_text?: string | null
          processing_status?: string
          error_message?: string | null
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          message_id?: string
          subject?: string
          sender?: string
          newsletter_name?: string
          received_at?: string
          processed_at?: string
          raw_html?: string | null
          clean_text?: string | null
          processing_status?: string
          error_message?: string | null
          updated_at?: string
        }
        Relationships: []
      }
      companies: {
        Row: {
          id: string
          name: string
          normalized_name: string
          description: string | null
          website: string | null
          funding_status: string | null
          industry: string[]
          embedding: number[] | null
          first_seen_at: string
          last_updated_at: string
          enrichment_status: string
          mention_count: number
          newsletter_diversity: number
          created_at: string
          updated_at: string
        }
        Insert: {
          id?: string
          name: string
          normalized_name: string
          description?: string | null
          website?: string | null
          funding_status?: string | null
          industry?: string[]
          embedding?: number[] | null
          first_seen_at?: string
          last_updated_at?: string
          enrichment_status?: string
          mention_count?: number
          newsletter_diversity?: number
          created_at?: string
          updated_at?: string
        }
        Update: {
          id?: string
          name?: string
          normalized_name?: string
          description?: string | null
          website?: string | null
          funding_status?: string | null
          industry?: string[]
          embedding?: number[] | null
          first_seen_at?: string
          last_updated_at?: string
          enrichment_status?: string
          mention_count?: number
          newsletter_diversity?: number
          updated_at?: string
        }
        Relationships: []
      }
      company_mentions: {
        Row: {
          id: string
          company_id: string
          email_id: string
          context: string
          sentiment: string
          confidence: number
          extracted_at: string
          created_at: string
        }
        Insert: {
          id?: string
          company_id: string
          email_id: string
          context: string
          sentiment: string
          confidence: number
          extracted_at?: string
          created_at?: string
        }
        Update: {
          id?: string
          company_id?: string
          email_id?: string
          context?: string
          sentiment?: string
          confidence?: number
          extracted_at?: string
        }
        Relationships: [
          {
            foreignKeyName: "company_mentions_company_id_fkey"
            columns: ["company_id"]
            referencedRelation: "companies"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "company_mentions_email_id_fkey"
            columns: ["email_id"]
            referencedRelation: "emails"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      daily_intelligence: {
        Row: {
          company_id: string
          name: string
          description: string | null
          website: string | null
          funding_status: string | null
          mention_id: string
          context: string
          sentiment: string
          confidence: number
          newsletter_name: string
          received_at: string
          mention_count: number
          newsletter_diversity: number
        }
        Relationships: []
      }
    }
    Functions: {
      match_companies: {
        Args: {
          query_company_id: string
          match_threshold?: number
          match_count?: number
        }
        Returns: {
          id: string
          name: string
          description: string | null
          similarity: number
        }[]
      }
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}